package ravensproject;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Random;
import java.awt.Image;
import java.io.File;
import javax.imageio.*;
import java.awt.image.*;

public class VisualApproach {
	
	private RavensProblem problem;
	private int tempAns;
	
	public VisualApproach(RavensProblem problem){
		this.problem = problem;
	}
	
	public int visualApproach() {
		
		return -1;
	}
	
	public int TestSolve() {
		RavensFigure figureA = problem.getFigures().get("A");
		//BufferedImage figAImage = null; 
		BufferedImage figureAImage = null;
		
		try {
			figureAImage = ImageIO.read(new File(figureA.getVisual()));
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		
		// from here: http://stackoverflow.com/questions/15002706/convert-an-image-to-a-2d-array-and-then-get-the-image-back-in-java
		Raster raster = figureAImage.getData();
		
		int width = raster.getWidth();
		int height = raster.getHeight();
		int [][] pixels = new int[width][height];
		
		for(int i = 0 ; i < width ; i++) {
			for(int j = 0 ; j < height ; j++) {
				pixels[i][j] = raster.getSample(i, j, 0);
			}
			//System.out.println(pixels);
		}
		return -1;
	}
}



//
//BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_BYTE_GRAY);
//image.setData(raster);
////
////BufferedImage image1 = image;
//try
//{
//    File ouptut = new File("grayscale.png");
//    ImageIO.write(image, "png", ouptut);
//}
//catch(Exception e)
//{
//    e.printStackTrace();
//}    
//
//}// main
